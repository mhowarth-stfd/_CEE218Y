# Chunk 14: Owner Occupied Burden 50
# filter for people who spend more than 50% of their income on housing
EPA_OwnerCostBurden50 <-
owner_housingcost %>%
mutate(
burden_count =
ifelse(
gross_housecost_perc %in% c(
"50.0 percent or more"
),
estimate,
NA
)
) %>%
group_by(house_income) %>%
summarize(
burdened_sum = sum(burden_count, na.rm = T),
total_pop = sum(estimate, na.rm = T)
) %>%
mutate(
percent_burdened = round(burdened_sum/total_pop*100,2)
) %>%
filter(!is.na(percent_burdened)) %>%
mutate(
tenure = "Owner-Occupied Housing"
)
# Chunk 15: Combining Dataframes 50
EPA_CombinedBurden50 <- rbind(EPA_OwnerCostBurden50, EPA_RentBurden50)
# Chunk 16: Visualizing Plots 50
EPA_HousingBurden50_Figure_gg <- EPA_CombinedBurden50 %>%
ggplot() +
geom_bar(
aes(
x = house_income %>% factor(levels = c("Less than $10,000:", "$10,000 to $19,999:", "$20,000 to $34,999:", "$35,000 to $49,999:", "$50,000 to $74,999:", "$75,000 to $99,999:", "$100,000 to $149,999:","$100,000 or more:", "$150,000 or more:")),
y = percent_burdened,
fill = tenure,
text = percent_burdened
),
stat = "identity",
position = "dodge"
)+
labs(
x = "Household Income",
y = "Percent Housing Burden",
title = "EPA Percent Housing Cost Burdened >= 50% by Tenure",
fill = "Tenure"
) +
coord_flip()
EPA_HousingBurden50_Figure <- ggplotly(EPA_HousingBurden50_Figure_gg, tooltip="text")
EPA_HousingBurden50_Figure
# Chunk 17: START OF PARCEL
# Chunk 18: data
# pulling parcels off website or load from save if not first time (should be fine to run from github folder)
#epa_zoning <- esri2sf("https://services8.arcgis.com/0IC8hha3hgQkmGoa/arcgis/rest/services/EastPaloAltoZoning_2021_WFL1/FeatureServer/1")
#write_rds(epa_zoning, "data/epa_zoning.rds")
epa_zoning <- read_rds("data/epa_zoning.rds")
# pulling assessor data or load from save if not first time (should be fine to run from github folder)
#smc_exemption <- read_csv("https://datahub.smcgov.org/api/views/pmvw-bs84/rows.csv?accessType=DOWNLOAD")
#write_rds(smc_exemption, "data/smc_exemption.rds")
smc_exemption <- read_rds("data/smc_exemption.rds")
# joining parcel data to assessor data
epa_exemption <- smc_exemption %>%
mutate(
# change assessor data's APN to match parcels for joining
APN = `Parcel Number` %>%
str_replace_all("-","")
) %>%
filter(APN %in% epa_zoning$APN) %>%
left_join(epa_zoning) %>%
st_as_sf() %>%
# filtering to only low density residential housing (single family)
filter(New_Zone == "R-LD")
# Chunk 19: parcle map
# renter v non renter for year 2018/2019
tenure_map <- leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data = epa_exemption %>%
filter(`Fiscal Year` == "2018/2019")%>% # can change year plotted here
filter(Exemption %in% c(0)),
fillColor = "yellow",
color = "black",
weight = 0.5,
group = "Renter Occupied Single Family"
) %>%
addPolygons(
data = epa_exemption %>%
filter(`Fiscal Year` == "2018/2019") %>% # can change year plotted here
filter(Exemption %in% c(5600,7000)),
fillColor = "blue",
color = "black",
weight = 0.5,
fillOpacity = 1,
group = "Owner Occupied Single Family"
)%>%
addLayersControl(
overlayGroups = c("Renter Occupied Single Family", "Owner Occupied Single Family"),
options = layersControlOptions(collapsed = FALSE)
)
tenure_map
# Chunk 20: owner_renter_trends
epa_exemption_singleUnit_trend <- epa_exemption %>%
# adding var to distinguish rented v owned
mutate(
Tenure = case_when(
Exemption %in% c(5600,7000) ~ "Owner Occupied",
Exemption == FALSE ~ "Rented" #identifying exemptions of $0 as rented
)
) %>%
filter(!is.na(Tenure)) %>%
# removing geometry
st_set_geometry(
NULL
) %>%
select(
Tenure, `Fiscal Year`
) %>%
group_by(
Tenure, `Fiscal Year`
)%>%
# creating count of each tenure for each year
summarize(`Household Count`=n()) %>%
# adding percentages of each year
ungroup() %>%
group_by(`Fiscal Year`) %>%
mutate(`Percent (%)` = paste0(round(`Household Count`/sum(`Household Count`) * 100,digits=2),"%"))
# Chunk 21
# this isnt a nice print out, but if you wanted the table in the knitted doc, this could do that
epa_exemption_singleUnit_trend
# Chunk 22: plot_ownership_rent_trend
owner_renter_trend_ggplot <-
epa_exemption_singleUnit_trend %>%
# making fiscal year a numeric continuous variable for line chart
mutate(
year = case_when(
`Fiscal Year` == "2015/2016" ~ 2015,
`Fiscal Year` == "2016/2017" ~ 2016,
`Fiscal Year` == "2017/2018" ~ 2017,
`Fiscal Year` == "2018/2019" ~ 2018,
)
) %>%
# plot
group_by(Tenure) %>%
ggplot() +
geom_line(
aes(
x = year,
y = `Household Count`,
color = Tenure,
group = Tenure,
text = `Percent (%)`
)
) +
labs(
x = "First Identifying Year of Fiscal Year",
y = "Count of Households",
title = "Owner-Renter Trends from 2015/2016-2018/2019",
color = "Tenure Type"
)
# Adding the following renames to proper fiscal year, but removes axis b/c labeling numbers with strings, seems an unavoidable problem b/c either I list x as a factor and the data doesn't plot, I change the labels and the axis disappears, or the axis labels aren't quite right.
#scale_x_discrete(breaks = c("2015", "2016", "2017", "2018"),
#                 labels=c("2015/2016", "2016/2017", "2017/2018", "2018/2019"))
owner_renter_trend_plot <- ggplotly(owner_renter_trend_ggplot, tooltip="text")
owner_renter_trend_plot
# Chunk 23: Change_of_Hands
CoH_epa_exemption <- epa_exemption %>% # to look at this dataframe best, sort by Parcel Number
select(
`Fiscal Year`, `Parcel Number`, `Assessed Value`, Exemption
) %>%
group_by(`Parcel Number`) %>%
mutate(
# determining increase in assessed value of a parcel from year to year for each household
increase_value = (`Assessed Value` - lag(`Assessed Value`)) / lag(`Assessed Value`),
# marking property as sold if there was an assessed value increase over 5%
prop_sold = case_when(
increase_value > 0.05 ~ "sold"
),
# marking if change of hands lead to change in owner occupied or renter
CoH_type = case_when(
prop_sold == "sold" & Exemption > 0 & lag(Exemption) > 0 ~ "Remained Owner \nOccupied",
prop_sold == "sold" & Exemption == 0 & lag(Exemption) == 0 ~ "Remained Renter \nOccupied",
prop_sold == "sold" & Exemption > 0 & lag(Exemption) == 0 ~ "Became Owner \nOccupied",
prop_sold == "sold" & Exemption == 0 & lag(Exemption) > 0 ~ "Became Renter \nOccupied",
)
)
# Chunk 24: CoH_trend
# summarize to get count of CoH type per year
CoH_epa_exemption_trend <- CoH_epa_exemption %>%
# removing geometry
st_set_geometry(
NULL
) %>%
select(
CoH_type, `Fiscal Year`
) %>%
# removing properties which were not sold
filter(
!is.na(CoH_type)
) %>%
group_by(
CoH_type, `Fiscal Year`
)%>%
# creating count of each CoH type for each year
summarize(`Property Sale Count`=n()) %>%
# adding percentages of each year
ungroup() %>%
group_by(`Fiscal Year`) %>%
mutate(`Percent (%)` = paste0(round(`Property Sale Count`/sum(`Property Sale Count`) * 100,digits=2),"%"))
CoH_epa_exemption_total_trend <- CoH_epa_exemption_trend%>%
group_by(`Fiscal Year`) %>%
summarise(`Total Property Sale` = sum(`Property Sale Count`))
# Chunk 25
# this isnt a nice print out, but if you wanted the table in the knitted doc, this could do that
CoH_epa_exemption_trend
CoH_epa_exemption_total_trend
# Chunk 26: CoH_plot
CoH_trend_ggplot <-
CoH_epa_exemption_trend %>%
# making fiscal year a numeric continuous variable for line chart
mutate(
year = case_when(
`Fiscal Year` == "2015/2016" ~ 2015,
`Fiscal Year` == "2016/2017" ~ 2016,
`Fiscal Year` == "2017/2018" ~ 2017,
`Fiscal Year` == "2018/2019" ~ 2018,
)
) %>%
# plot
group_by(CoH_type) %>%
ggplot() +
geom_line(
aes(
x = year,
y = `Property Sale Count`,
color = CoH_type,
group = CoH_type,
text = `Percent (%)`
)
) +
labs(
x = "First Identifying Year of Fiscal Year",
y = "Count of Property Sales",
title = "Property Sale Trends from 2016/2017-2018/2019",
color = "Change of Hands Type"
) + scale_x_continuous(breaks=c(2016, 2017, 2018))
# Adding the following renames to proper fiscal year, but removes axis b/c labeling numbers with strings, seems an unavoidable problem b/c either I list x as a factor and the data doesn't plot, I change the labels and the axis disappears, or the axis labels aren't quite right.
#scale_x_discrete(breaks = c("2015", "2016", "2017", "2018"),
#                 labels=c("2015/2016", "2016/2017", "2017/2018", "2018/2019"))
CoH_trend_plot <- ggplotly(CoH_trend_ggplot, tooltip="text")
CoH_trend_plot
knitr::opts_chunk$set(echo = F, warning = F, message = False)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
knitr::opts_chunk$set(echo = F, results='hide', fig.keep='all',  warning = F, message = F)
CoH_trend_ggplot <-
CoH_epa_exemption_trend %>%
# making fiscal year a numeric continuous variable for line chart
mutate(
year = case_when(
`Fiscal Year` == "2015/2016" ~ 2015,
`Fiscal Year` == "2016/2017" ~ 2016,
`Fiscal Year` == "2017/2018" ~ 2017,
`Fiscal Year` == "2018/2019" ~ 2018,
)
) %>%
# plot
group_by(CoH_type) %>%
ggplot() +
geom_line(
aes(
x = year,
y = `Percent (%)`,
color = CoH_type,
group = CoH_type,
text = `Property Sale Count`
)
) +
labs(
x = "First Identifying Year of Fiscal Year",
y = "Count of Property Sales",
title = "Property Sale Trends from 2016/2017-2018/2019",
color = "Change of Hands Type"
) + scale_x_continuous(breaks=c(2016, 2017, 2018))
# Adding the following renames to proper fiscal year, but removes axis b/c labeling numbers with strings, seems an unavoidable problem b/c either I list x as a factor and the data doesn't plot, I change the labels and the axis disappears, or the axis labels aren't quite right.
#scale_x_discrete(breaks = c("2015", "2016", "2017", "2018"),
#                 labels=c("2015/2016", "2016/2017", "2017/2018", "2018/2019"))
CoH_trend_plot_perc <- ggplotly(CoH_trend_ggplot_perc, tooltip="text")
CoH_trend_plot_perc
CoH_trend_ggplot_perc <-
CoH_epa_exemption_trend %>%
# making fiscal year a numeric continuous variable for line chart
mutate(
year = case_when(
`Fiscal Year` == "2015/2016" ~ 2015,
`Fiscal Year` == "2016/2017" ~ 2016,
`Fiscal Year` == "2017/2018" ~ 2017,
`Fiscal Year` == "2018/2019" ~ 2018,
)
) %>%
# plot
group_by(CoH_type) %>%
ggplot() +
geom_line(
aes(
x = year,
y = `Percent (%)`,
color = CoH_type,
group = CoH_type,
text = `Property Sale Count`
)
) +
labs(
x = "First Identifying Year of Fiscal Year",
y = "Count of Property Sales",
title = "Property Sale Trends from 2016/2017-2018/2019",
color = "Change of Hands Type"
) + scale_x_continuous(breaks=c(2016, 2017, 2018))
# Adding the following renames to proper fiscal year, but removes axis b/c labeling numbers with strings, seems an unavoidable problem b/c either I list x as a factor and the data doesn't plot, I change the labels and the axis disappears, or the axis labels aren't quite right.
#scale_x_discrete(breaks = c("2015", "2016", "2017", "2018"),
#                 labels=c("2015/2016", "2016/2017", "2017/2018", "2018/2019"))
CoH_trend_plot_perc <- ggplotly(CoH_trend_ggplot_perc, tooltip="text")
CoH_trend_plot_perc
# summarize to get count of CoH type per year
CoH_epa_exemption_trend <- CoH_epa_exemption %>%
# removing geometry
st_set_geometry(
NULL
) %>%
select(
CoH_type, `Fiscal Year`
) %>%
# removing properties which were not sold
filter(
!is.na(CoH_type)
) %>%
group_by(
CoH_type, `Fiscal Year`
)%>%
# creating count of each CoH type for each year
summarize(`Property Sale Count`=n()) %>%
# adding percentages of each year
ungroup() %>%
group_by(`Fiscal Year`) %>%
mutate(
percent = round(`Property Sale Count`/sum(`Property Sale Count`) * 100,digits=2)
`Percent (%)` = paste0(round(`Property Sale Count`/sum(`Property Sale Count`) * 100,digits=2),"%"))
CoH_epa_exemption_total_trend <- CoH_epa_exemption_trend%>%
group_by(`Fiscal Year`) %>%
summarise(`Total Property Sale` = sum(`Property Sale Count`))
# summarize to get count of CoH type per year
CoH_epa_exemption_trend <- CoH_epa_exemption %>%
# removing geometry
st_set_geometry(
NULL
) %>%
select(
CoH_type, `Fiscal Year`
) %>%
# removing properties which were not sold
filter(
!is.na(CoH_type)
) %>%
group_by(
CoH_type, `Fiscal Year`
)%>%
# creating count of each CoH type for each year
summarize(`Property Sale Count`=n()) %>%
# adding percentages of each year
ungroup() %>%
group_by(`Fiscal Year`) %>%
mutate(
percent = round(`Property Sale Count`/sum(`Property Sale Count`) * 100,digits=2),
`Percent (%)` = paste0(round(`Property Sale Count`/sum(`Property Sale Count`) * 100,digits=2),"%"))
CoH_epa_exemption_total_trend <- CoH_epa_exemption_trend%>%
group_by(`Fiscal Year`) %>%
summarise(`Total Property Sale` = sum(`Property Sale Count`))
CoH_trend_ggplot_perc <-
CoH_epa_exemption_trend %>%
# making fiscal year a numeric continuous variable for line chart
mutate(
year = case_when(
`Fiscal Year` == "2015/2016" ~ 2015,
`Fiscal Year` == "2016/2017" ~ 2016,
`Fiscal Year` == "2017/2018" ~ 2017,
`Fiscal Year` == "2018/2019" ~ 2018,
)
) %>%
# plot
group_by(CoH_type) %>%
ggplot() +
geom_line(
aes(
x = year,
y = percent,
color = CoH_type,
group = CoH_type,
text = `Property Sale Count`
)
) +
labs(
x = "First Identifying Year of Fiscal Year",
y = "Count of Property Sales",
title = "Property Sale Trends from 2016/2017-2018/2019",
color = "Change of Hands Type"
) + scale_x_continuous(breaks=c(2016, 2017, 2018))
# Adding the following renames to proper fiscal year, but removes axis b/c labeling numbers with strings, seems an unavoidable problem b/c either I list x as a factor and the data doesn't plot, I change the labels and the axis disappears, or the axis labels aren't quite right.
#scale_x_discrete(breaks = c("2015", "2016", "2017", "2018"),
#                 labels=c("2015/2016", "2016/2017", "2017/2018", "2018/2019"))
CoH_trend_plot_perc <- ggplotly(CoH_trend_ggplot_perc, tooltip="text")
CoH_trend_plot_perc
CoH_trend_ggplot_perc <-
CoH_epa_exemption_trend %>%
# making fiscal year a numeric continuous variable for line chart
mutate(
year = case_when(
`Fiscal Year` == "2015/2016" ~ 2015,
`Fiscal Year` == "2016/2017" ~ 2016,
`Fiscal Year` == "2017/2018" ~ 2017,
`Fiscal Year` == "2018/2019" ~ 2018,
)
) %>%
# plot
group_by(CoH_type) %>%
ggplot() +
geom_line(
aes(
x = year,
y = percent,
color = CoH_type,
group = CoH_type,
text = `Percent (%)`
)
) +
labs(
x = "First Identifying Year of Fiscal Year",
y = "Percent of Property Sales (%)",
title = "Property Sale Trends from 2016/2017-2018/2019",
color = "Change of Hands Type"
) + scale_x_continuous(breaks=c(2016, 2017, 2018))
# Adding the following renames to proper fiscal year, but removes axis b/c labeling numbers with strings, seems an unavoidable problem b/c either I list x as a factor and the data doesn't plot, I change the labels and the axis disappears, or the axis labels aren't quite right.
#scale_x_discrete(breaks = c("2015", "2016", "2017", "2018"),
#                 labels=c("2015/2016", "2016/2017", "2017/2018", "2018/2019"))
CoH_trend_plot_perc <- ggplotly(CoH_trend_ggplot_perc, tooltip="text")
CoH_trend_plot_perc
CoH_trend_ggplot <-
CoH_epa_exemption_trend %>%
# making fiscal year a numeric continuous variable for line chart
mutate(
year = case_when(
`Fiscal Year` == "2015/2016" ~ 2015,
`Fiscal Year` == "2016/2017" ~ 2016,
`Fiscal Year` == "2017/2018" ~ 2017,
`Fiscal Year` == "2018/2019" ~ 2018,
)
) %>%
# plot
group_by(CoH_type) %>%
ggplot() +
geom_line(
aes(
x = year,
y = `Property Sale Count`,
color = CoH_type,
group = CoH_type,
text = `Percent (%)`
)
) +
labs(
x = "First Identifying Year of Fiscal Year",
y = "Count of Property Sales",
title = "Property Sale Trends from 2016/2017-2018/2019",
color = "Change of Hands Type"
) + scale_x_continuous(breaks=c(2016, 2017, 2018))
# Adding the following renames to proper fiscal year, but removes axis b/c labeling numbers with strings, seems an unavoidable problem b/c either I list x as a factor and the data doesn't plot, I change the labels and the axis disappears, or the axis labels aren't quite right.
#scale_x_discrete(breaks = c("2015", "2016", "2017", "2018"),
#                 labels=c("2015/2016", "2016/2017", "2017/2018", "2018/2019"))
CoH_trend_plot <- ggplotly(CoH_trend_ggplot, tooltip="text")
CoH_trend_plot
CoH_trend_ggplot <-
CoH_epa_exemption_trend %>%
# making fiscal year a numeric continuous variable for line chart
mutate(
year = case_when(
`Fiscal Year` == "2015/2016" ~ 2015,
`Fiscal Year` == "2016/2017" ~ 2016,
`Fiscal Year` == "2017/2018" ~ 2017,
`Fiscal Year` == "2018/2019" ~ 2018,
)
) %>%
# plot
group_by(CoH_type) %>%
ggplot() +
geom_line(
aes(
x = year,
y = `Property Sale Count`,
color = CoH_type,
group = CoH_type,
text = `Property Sale Count`
)
) +
labs(
x = "First Identifying Year of Fiscal Year",
y = "Count of Property Sales",
title = "Property Sale Trends from 2016/2017-2018/2019",
color = "Change of Hands Type"
) + scale_x_continuous(breaks=c(2016, 2017, 2018))
# Adding the following renames to proper fiscal year, but removes axis b/c labeling numbers with strings, seems an unavoidable problem b/c either I list x as a factor and the data doesn't plot, I change the labels and the axis disappears, or the axis labels aren't quite right.
#scale_x_discrete(breaks = c("2015", "2016", "2017", "2018"),
#                 labels=c("2015/2016", "2016/2017", "2017/2018", "2018/2019"))
CoH_trend_plot <- ggplotly(CoH_trend_ggplot, tooltip="text")
CoH_trend_plot
CoH_trend_plot_perc
